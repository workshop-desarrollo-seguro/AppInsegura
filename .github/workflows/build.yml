name: Build
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:

  OWASP_Dependency_Check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'prueba'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7
            --enableRetired
            
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports  


  CodeQL:
    needs: OWASP_Dependency_Check
    name: CodeQL
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
        - name: Checkout repository
          uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
        - name: Initialize CodeQL
          uses: github/codeql-action/init@v2
          with:
            languages: ${{ matrix.language }}
        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
        - name: Autobuild
          uses: github/codeql-action/autobuild@v2

        - name: Perform CodeQL Analysis
          uses: github/codeql-action/analyze@v2


  sonarcloud:
    name: SonarCloud
    needs: OWASP_Dependency_Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Deploy:
    name: Deploy
    needs: [sonarcloud, CodeQL]
    runs-on: ubuntu-latest
    steps:
      - name: FakeDeploy
        run: echo 'Test'

  ZAP_Scan:
    needs: [Deploy]
    name: ZAP Scan
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.5.0
        with:
          target: ${{ secrets.SERVER_WEB }}
          
  nuclei-scan:
    needs: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Nuclei - DAST Scan
        uses: projectdiscovery/nuclei-action@main
        with:
          target: ${{ secrets.SERVER_WEB }}
          flags: "-severity critical,high -stats"

      - name: GitHub Workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nuclei.log
          path: ./nuclei.log           
